// <auto-generated />
using System;
using GatherUs.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GatherUs.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240310145306_AddedEventPictureUrl")]
    partial class AddedEventPictureUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GatherUs.DAL.Models.AttendanceInvite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomEventId")
                        .HasColumnType("integer");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.Property<byte>("InviteStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomEventId");

                    b.HasIndex("GuestId");

                    b.ToTable("AttendanceInvites");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.CustomEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("CustomEventCategories")
                        .HasColumnType("integer[]");

                    b.Property<byte>("CustomEventLocationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CustomEventType")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("MinRequiredAge")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("integer");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.ToTable("CustomEvents");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.CustomEventGuest", b =>
                {
                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomEventId")
                        .HasColumnType("integer");

                    b.HasKey("GuestId", "CustomEventId");

                    b.HasIndex("CustomEventId");

                    b.ToTable("CustomEventGuest");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.EmailForRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfirmationCode")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("EmailForRegistrations");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LoginProvider")
                        .HasColumnType("integer");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<int>("UserType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GatherUs.DAL.Models.Admin", b =>
                {
                    b.HasBaseType("GatherUs.DAL.Models.User");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("GatherUs.DAL.Models.Guest", b =>
                {
                    b.HasBaseType("GatherUs.DAL.Models.User");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("GatherUs.DAL.Models.Organizer", b =>
                {
                    b.HasBaseType("GatherUs.DAL.Models.User");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("GatherUs.DAL.Models.AttendanceInvite", b =>
                {
                    b.HasOne("GatherUs.DAL.Models.CustomEvent", "CustomEvent")
                        .WithMany("Invites")
                        .HasForeignKey("CustomEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GatherUs.DAL.Models.Guest", "Guest")
                        .WithMany("Invites")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomEvent");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.CustomEvent", b =>
                {
                    b.HasOne("GatherUs.DAL.Models.Organizer", "Organizer")
                        .WithMany("CreatedEvents")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.CustomEventGuest", b =>
                {
                    b.HasOne("GatherUs.DAL.Models.CustomEvent", "CustomEvent")
                        .WithMany("CustomEventGuests")
                        .HasForeignKey("CustomEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GatherUs.DAL.Models.Guest", "Guest")
                        .WithMany("CustomEventGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomEvent");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.CustomEvent", b =>
                {
                    b.Navigation("CustomEventGuests");

                    b.Navigation("Invites");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.Guest", b =>
                {
                    b.Navigation("CustomEventGuests");

                    b.Navigation("Invites");
                });

            modelBuilder.Entity("GatherUs.DAL.Models.Organizer", b =>
                {
                    b.Navigation("CreatedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
